name: Build Frontend

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for frontend changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            frontend:
              - 'Zadanie_5/**'
              - '.github/workflows/frontend-backend.yml'
      
      - name: Create .env file for frontend
        if: steps.changes.outputs.frontend == 'true'
        run: |
          echo "REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }}" >> Zadanie_5/react-app/.env

      - name: Set up Docker Buildx
        if: steps.changes.outputs.frontend == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Build frontend Docker image
        if: steps.changes.outputs.frontend == 'true'
        run: docker build -t frontend ./Zadanie_5/react-app
      
      - name: Send notification email
        if: steps.changes.outputs.frontend == 'true'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.example.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: Frontend Build Notification
          to: angelo.norelli@student.uj.edu.pl
          from: ${{ secrets.EMAIL_USERNAME }}
          body: "The frontend Docker image has been built successfully."
      
      - name: Deploy front to cloud server
        if: success()
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.CLOUD_SERVER_HOST }}
          username: ${{ secrets.CLOUD_SERVER_USERNAME }}
          key: ${{ secrets.CLOUD_SERVER_SSH_KEY }}
          source: "./Zadanie_5/react-app"
          target: "~"
      
      - name: Restart app on server
        if: success()
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.CLOUD_SERVER_HOST }}
          username: ${{ secrets.CLOUD_SERVER_USERNAME }}
          key: ${{ secrets.CLOUD_SERVER_SSH_KEY }}
          script: |
            docker compose up --build -d